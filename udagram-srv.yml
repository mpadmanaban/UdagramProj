Description: >
  Magesh Padmanaban
  Udagram IAC High-Availability Web App Project Server Cfn

Parameters:
  EnvironmentName: 
    Description: An environment name that will be prefixed to resource names
    Type: String   
  
  WebServerInstanceType: 
    Description: Instance Type to be used for webserver EC2 instances
    Type: String 
  
  WebServerImageID:
    Description: AWS Image ID to be used as base for webservers
    Type: String

  BastionHostInstanceType: 
    Description: Instance Type to be used for bastionhost EC2 instances
    Type: String 
  
  BastionHostKeyName: 
    Description: SSH Key Name for accessing the bastionhost via ssh
    Type: String 

  BastionHostImageID: 
    Description: AWS Image ID to be used as base for bastionhost
    Type: String   

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  BastionHostSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh to our bastion host
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:      
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 174.72.246.236/32
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  UdagramS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: S3GetPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 's3:Get*'
                Resource: '*'

  WebAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:       
      Roles:
        - Ref: UdagramS3Role

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
      ImageId: !Ref WebServerImageID      
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: !Ref WebServerInstanceType
      IamInstanceProfile: !Ref WebAppInstanceProfile 
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'

  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  
  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
 
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
 
  BastionHost1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: BastionHostInstanceType       
      KeyName:
        Ref: BastionHostKeyName
      ImageId:
        Ref: BastionHostImageID      
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
          - Ref: "BastionHostSecGroup"
        SubnetId: 
          Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName}-BastionHost1
          
Outputs:

  LoadBalancerEndpoint:
    Description: Url to access end point
    Value: !Join [ "", [ 'http://', !GetAtt WebAppLoadBalancer.DNSName ]]
    Export:
      Name: !Sub ${EnvironmentName}-DNSURL

  BastionHost1DNS: 
    Description: A DNS Name of the Bastion Host
    Value: !GetAtt BastionHost1.PublicDnsName
    Export:
      Name: !Sub ${EnvironmentName}-BastionHost1DNS
